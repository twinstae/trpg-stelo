---
type Props = {
	link: string;
  text: string;
};

const props = Astro.props as Props;

const currentPage = Astro.url.pathname;
const currentPageMatch = currentPage.endsWith('/')
	? currentPage.slice(1, -1)
	: currentPage.slice(1);

const url = Astro.site?.pathname + props.link;
---

<li class="nav-link">
  <a href={url} aria-current={currentPageMatch === props.link ? 'page' : false} tabindex="-1">
    {props.text}
  </a>
</li>

<style>
  
	.nav-link a {
		font-size: 1rem;
		margin: 1px;
		padding: 0.3rem 1rem;
		font: inherit;
		color: inherit;
		text-decoration: none;
		display: block;
		border-radius: 0.5rem;
		transition: background-color 0.25s;
	}

	.nav-link a:hover,
	.nav-link a:focus {
		@apply text-primary-focus;
		--tw-bg-opacity: 1;
		background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
	}

	.nav-link a[aria-current='page'] {
		@apply text-primary-focus;
		--tw-bg-opacity: 0.5;
		background-color: hsl(var(--b2, var(--b1)) / var(--tw-bg-opacity));
		font-weight: 600;
	}

	html.theme-dark .nav-link a[aria-current='page'] {
		background-color: hsl(var(--b3) / var(--tw-bg-opacity));
	}

</style>
