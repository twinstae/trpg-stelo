---
type Props = {
	link: string;
  text: string;
};

const props = Astro.props as Props;

const currentPage = Astro.url.pathname;
const currentPageMatch = currentPage.endsWith('/')
	? currentPage.slice(1, -1)
	: currentPage.slice(1);

const url = Astro.site?.pathname + props.link;
---

<li class="nav-link">
  <a href={url} aria-current={currentPageMatch === props.link ? 'page' : false}>
    {props.text}
  </a>
</li>

<style>
  
	.nav-link a {
		font-size: 1rem;
		margin: 1px;
		padding: 0.3rem 1rem;
		font: inherit;
		color: inherit;
		text-decoration: none;
		display: block;
		border-radius: 0.5rem;
		transition: background-color 0.25s;
	}

	.nav-link a:hover,
	.nav-link a:focus {
		background-color: var(--theme-bg-hover);
	}

	.nav-link a[aria-current='page'] {
		color: var(--theme-text-accent);
		background-color: var(--theme-bg-accent);
		font-weight: 600;
	}

</style>

<style is:global>
	:root.theme-dark .nav-link a[aria-current='page'] {
		color: hsla(var(--color-base-white), 100%, 1);
	}
</style>